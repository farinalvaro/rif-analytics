{"version":3,"sources":["logo.svg","hooks/useTracker.tsx","components/Tracker.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useTracker","src","activated","dataDomain","useEffect","script","document","createElement","setAttribute","head","appendChild","removeChild","Tracker","useState","active","setActive","onClick","App","className","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qLAAe,G,KAAA,IAA0B,kC,eC8B1BA,EAtBI,SAAC,GAEd,IADFC,EACC,EADDA,IAAKC,EACJ,EADIA,UAAWC,EACf,EADeA,WAGlBC,qBAAU,WACR,GAAIF,EAAW,CACb,IAAMG,EAASC,SAASC,cAAc,UAQtC,OANAF,EAAOG,aAAa,MAAOP,GAC3BI,EAAOG,aAAa,QAAS,QAC7BH,EAAOG,aAAa,cAAeL,GAEnCG,SAASG,KAAKC,YAAYL,GAEnB,WACLC,SAASG,KAAKE,YAAYN,OAG7B,CAACJ,EAAKC,EAAWC,K,OCPPS,EAbK,WAAO,IAAD,EACIC,oBAAS,GADb,mBACjBC,EADiB,KACTC,EADS,KAMxB,OAJAf,EACE,CAAEC,IALM,uCAKIC,UAAWY,EAAQX,WANf,wCAUhB,mCACE,wBAAQa,QAAS,kBAAMD,GAAU,IAAjC,iCCKSE,MAdf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKjB,IAAKkB,EAAMC,IAAI,SACpB,kEAGA,cAAC,EAAD,UCCOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,SAM1BZ,K","file":"static/js/main.d89a0bd4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2b24e5d7.svg\";","import { useEffect } from 'react'\n\ntype UseTrackerProps = {\n  src: string\n  activated: boolean\n  dataDomain: string\n}\n\nconst useTracker = (\n  { src, activated, dataDomain }: UseTrackerProps\n) => {\n\n  useEffect(() => {\n    if (activated) {\n      const script = document.createElement('script')\n\n      script.setAttribute('src', src)\n      script.setAttribute('async', 'true')\n      script.setAttribute('data-domain', dataDomain)\n\n      document.head.appendChild(script)\n\n      return () => {\n        document.head.removeChild(script)\n      }\n    }\n  }, [src, activated, dataDomain])\n\n}\n\nexport default useTracker\n","import React, { FC, useState } from 'react'\nimport useTracker from '../hooks/useTracker'\n\nconst DATA_DOMAIN = 'farinalvaro.github.io/rif-analytics'\nconst SRC = 'https://plausible.io/js/plausible.js'\n\nconst Tracker: FC = () => {\n  const [active, setActive] = useState(false)\n  useTracker(\n    { src: SRC, activated: active, dataDomain: DATA_DOMAIN }\n  )\n\n  return (\n    <>\n      <button onClick={() => setActive(true)}>Activate tracker</button>\n    </>\n  )\n}\n\nexport default Tracker\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Tracker from './components/Tracker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} alt=\"logo\" />\n        <p>\n          Sandbox project for RIF Analytics\n        </p>\n        <Tracker />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}